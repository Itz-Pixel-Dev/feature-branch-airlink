<%- include('../../partials/admin/header.ejs') %>

<div class="container-fluid">
	<div class="d-sm-flex align-items-center justify-content-between mb-4">
		<h1 class="h3 mb-0 text-gray-800">API Keys Management</h1>
		<button class="btn btn-primary" data-toggle="modal" data-target="#createApiKeyModal">
			<i class="fas fa-plus"></i> Create New API Key
		</button>
	</div>

	<div class="card shadow mb-4">
		<div class="card-header py-3">
			<h6 class="m-0 font-weight-bold text-primary">Active API Keys</h6>
		</div>
		<div class="card-body">
			<div class="table-responsive">
				<table class="table table-bordered" id="apiKeysTable" width="100%" cellspacing="0">
					<thead>
						<tr>
							<th>Name</th>
							<th>Description</th>
							<th>Key</th>
							<th>Status</th>
							<th>Rate Limit</th>
							<th>Expires</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody>
						<% apiKeys.forEach(key => { %>
							<tr>
								<td><%= key.name %></td>
								<td><%= key.description %></td>
								<td>
									<div class="input-group">
										<input type="text" class="form-control" value="<%= key.key %>" readonly>
										<div class="input-group-append">
											<button class="btn btn-outline-secondary copy-btn" data-key="<%= key.key %>">
												<i class="fas fa-copy"></i>
											</button>
										</div>
									</div>
								</td>
								<td>
									<span class="badge badge-<%= key.active ? 'success' : 'danger' %>">
										<%= key.active ? 'Active' : 'Inactive' %>
									</span>
								</td>
								<td><%= key.rateLimit %>/min</td>
								<td><%= key.expiresAt ? new Date(key.expiresAt).toLocaleDateString() : 'Never' %></td>
								<td>
									<button class="btn btn-info btn-sm" onclick="editApiKey('<%= key.id %>')">
										<i class="fas fa-edit"></i>
									</button>
									<button class="btn btn-<%= key.active ? 'warning' : 'success' %> btn-sm" 
											onclick="toggleApiKey('<%= key.id %>', <%= key.active %>)">
										<i class="fas fa-<%= key.active ? 'pause' : 'play' %>"></i>
									</button>
									<button class="btn btn-danger btn-sm" onclick="deleteApiKey('<%= key.id %>')">
										<i class="fas fa-trash"></i>
									</button>
								</td>
							</tr>
						<% }); %>
					</tbody>
				</table>
			</div>
		</div>
	</div>
</div>

<!-- Create API Key Modal -->
<div class="modal fade" id="createApiKeyModal" tabindex="-1" role="dialog">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Create New API Key</h5>
				<button type="button" class="close" data-dismiss="modal">
					<span>&times;</span>
				</button>
			</div>
			<form id="createApiKeyForm">
				<div class="modal-body">
					<div class="form-group">
						<label>Name</label>
						<input type="text" class="form-control" name="name" required>
					</div>
					<div class="form-group">
						<label>Description</label>
						<textarea class="form-control" name="description"></textarea>
					</div>
					<div class="form-group">
						<label>Rate Limit (requests per minute)</label>
						<input type="number" class="form-control" name="rateLimit" value="60" min="1">
					</div>
					<div class="form-group">
						<label>IP Restrictions (comma-separated)</label>
						<input type="text" class="form-control" name="ipRestrictions" placeholder="e.g., 192.168.1.1, 10.0.0.1">
					</div>
					<div class="form-group">
						<label>Expires At</label>
						<input type="datetime-local" class="form-control" name="expiresAt">
					</div>
					
					<div class="form-group">
						<label>Permissions</label>
						<div class="table-responsive">
							<table class="table table-bordered">
								<thead>
									<tr>
										<th>Resource</th>
										<th>Access Level</th>
									</tr>
								</thead>
								<tbody>
									<% ['allocations', 'databases', 'images', 'locations', 'nests', 
										'eggs', 'nodes', 'server_databases', 'servers', 'users'].forEach(resource => { %>
										<tr>
											<td><%= resource.charAt(0).toUpperCase() + resource.slice(1).replace('_', ' ') %></td>
											<td>
												<select class="form-control" name="permissions[<%= resource %>]" required>
													<option value="none">None</option>
													<option value="read">Read</option>
													<option value="write">Read/Write</option>
												</select>
											</td>
										</tr>
									<% }); %>
								</tbody>
							</table>
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button type="submit" class="btn btn-primary">Create API Key</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Edit API Key Modal -->
<div class="modal fade" id="editApiKeyModal" tabindex="-1" role="dialog">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Edit API Key</h5>
				<button type="button" class="close" data-dismiss="modal">
					<span>&times;</span>
				</button>
			</div>
			<form id="editApiKeyForm">
				<div class="modal-body">
					<!-- Same form fields as create modal -->
					<input type="hidden" name="keyId" id="editKeyId">
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
					<button type="submit" class="btn btn-primary">Save Changes</button>
				</div>
			</form>
		</div>
	</div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" role="dialog">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title">Confirm Deletion</h5>
				<button type="button" class="close" data-dismiss="modal">
					<span>&times;</span>
				</button>
			</div>
			<div class="modal-body">
				Are you sure you want to delete this API key? This action cannot be undone.
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
				<button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
			</div>
		</div>
	</div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
	// Initialize DataTables
	$('#apiKeysTable').DataTable();

	// Copy API Key functionality
	document.querySelectorAll('.copy-btn').forEach(btn => {
		btn.addEventListener('click', function() {
			const key = this.dataset.key;
			navigator.clipboard.writeText(key).then(() => {
				showToast('API key copied to clipboard!', 'success');
			});
		});
	});

	// Form submission handling
	document.getElementById('createApiKeyForm').addEventListener('submit', async function(e) {
		e.preventDefault();
		const formData = new FormData(this);
		const data = Object.fromEntries(formData.entries());
		
		try {
			const response = await fetch('/admin/api/keys', {
				method: 'POST',
				headers: { 'Content-Type': 'application/json' },
				body: JSON.stringify(data)
			});
			
			if (response.ok) {
				showToast('API key created successfully!', 'success');
				location.reload();
			} else {
				throw new Error('Failed to create API key');
			}
		} catch (error) {
			showToast('Error creating API key', 'error');
		}
	});
});

function editApiKey(id) {
	// Populate and show edit modal
	$('#editApiKeyModal').modal('show');
}

function toggleApiKey(id, currentState) {
	fetch(`/admin/api/keys/${id}/toggle`, {
		method: 'POST',
		headers: { 'Content-Type': 'application/json' }
	})
	.then(response => {
		if (response.ok) {
			showToast(`API key ${currentState ? 'deactivated' : 'activated'} successfully!`, 'success');
			location.reload();
		}
	})
	.catch(() => showToast('Error toggling API key status', 'error'));
}

function deleteApiKey(id) {
	$('#deleteConfirmModal').modal('show');
	document.getElementById('confirmDelete').onclick = function() {
		fetch(`/admin/api/keys/${id}`, { method: 'DELETE' })
			.then(response => {
				if (response.ok) {
					showToast('API key deleted successfully!', 'success');
					location.reload();
				}
			})
			.catch(() => showToast('Error deleting API key', 'error'));
	};
}

function showToast(message, type) {
	Swal.fire({
		toast: true,
		position: 'top-end',
		showConfirmButton: false,
		timer: 3000,
		icon: type,
		title: message
	});
}
</script>

<%- include('../../partials/admin/footer.ejs') %>